## Wrangling the Billboard Top 100
# Part A 

library(tidyverse)

# read in file 
billboard = read.csv('/Users/teamccormack/Downloads/billboard.csv')

# number of weeks a song and performer are in the top 10 
# group by performer and song to get unique combinations 
# summarise gets number of unique weeks 
# I asked Chat GPT "how to get the top 10 values from a data frame when grouped by 2 variables"
count <- billboard %>% 
  group_by(performer, song) %>% 
  summarise(count = n()) %>%
  arrange(desc(count))

# Print the number of times a song is in the billboard top 100 
# uses whole data frame 
#print(count)

# gets only the top 10 
top_10 <- head(count, 10)
top_10 # displays top 10 

print('The table shows that the top 10 song and performer combinations spent between 64 and 87 weeks on the Billboard Top 100. The top performer and song combination is Radioactive by Imagine Dragons.')


# The table shows the top 10 most popular songs from 1958 to 2021. The data includes perfomer, song, and count, and differentiates different popular song names based on the artist that performed them. 
# Part A creates a table of the 10 most popular songs since 1958, and includes performer, song, and count. Performer and song were grouped together in order to get the count that the song and performer appeared on the top 100. The top 10 are then sorted, starting with which song was the most popular. 


# Part B 

# exclude year 1958 and 2021 
remove_years <- billboard %>% 
  filter(year != 1958 & year != 2021)

# groups by year and gets number of unique songs 
# uses remove years data frame so 1958 and 2021 are not included 
musical_diversity <- remove_years %>% 
  group_by(year) %>% 
  summarise(num_unique_songs = n_distinct(song)) %>% 
  arrange(year) # sort by year
musical_diversity
  
# I asked Chat GPT how to add a caption to a line plot and was told to use labs(caption = )
# plot the musical diversity results 
ggplot(musical_diversity, aes(x = year, y = num_unique_songs)) +
  geom_line() + 
  geom_point() +  
  labs(caption = 'The plot shows the number of unique songs for each year from 1958 to 2020. 
       1958 and 2021 were excluded becuase all data for both of those years had not been collected.')


# For years with complete data (not 1958 and 2021), the number of unique songs that appeared on the top 100 was counted. When looking at the graph, you can see that there is a distinct drop in the number of unique songs between 1980 and 2010. 


# Part C 

# get artists that have songs for at least 10 weeks 
min_10_weeks <- billboard %>% 
  group_by(performer, song) %>%
  summarise(weeks_on_chart = n()) %>% 
  filter(weeks_on_chart >= 10)
min_10_weeks

# number of 10 week hits for each artist 
# 19 artist have at least 30 songs 
artist_10_weeks <- min_10_weeks %>%
  group_by(performer) %>%
  summarise(num_hit_greater10 = n()) %>%
  filter(num_hit_greater10 >= 30)
artist_10_weeks

# bar plot showing how many 10 week hits per artist 
ggplot(artist_10_weeks, aes(x = performer, y = num_hit_greater10)) +
  geom_bar(stat = "identity") +
  coord_flip() +  # flip coordinates 
  labs(
    x = "Perfomer",
    y = "Number of Ten-Week Hits",
    caption = "The bar graph shows 19 artists that have had at least 30 songs that were 10 week hits."
  )

# I began by getting all of the artists that had a song on the billboard chart for at least 10 weeks. Next, I took that data and grouped by performer, and made sure that a performer's count was greater than 30. That resulted in 19 artists having at least 30 hits. The bar plot shows the amount of ten week hits that an artist has vs. the performer. 
